/*! mywallet - v0.0.1 - 2014-09-28 */var MW = {
	i: {},
	components: {},
	services: {}
};
MW.services.Delegator = function() {
	
	/**
	 * delegate method
	 * the method that actually do the job
	 * @return void
	 */
	this.delegate = function() {
		var components = $('[data-component]');

		$.each(components, function(index, value) {
			var component = $(this).data('component');
			/**
			 * Define the components inside the case
			 */
			switch(component) {
				case 'movements':
					MW.i.movements = new MW.components.Movements({
						wrapper: $(this)
					});
					break;

				default:
					console.log('default')
					break;

			}
		});
	}

	this.delegate();
}
MW.components.Movements = function(settings) {
	this.init(settings);
}

MW.components.Movements.prototype = {
	init: function(settings) {
		this.settings = settings;

		this.bind();
	},

	bind: function() {
		
	}
}
MW.components.FormMovement = function(settings) {
	this.init(settings);
}

MW.components.FormMovement.prototype = {
	init: function(settings) {
		this.settings = settings;

		this.setup();
		this.bind();
	},

	setup: function() {
		this.settings.form.find('.switch').bootstrapSwitch();
	},

	bind: function() {
		var self = this;

		this.settings.form.on('submit', function(ev) {
			ev.preventDefault();
			self.submitForm(ev.target);
		});
	},

	submitForm: function(form) {
		var self = this,
			data = $(form).serialize(),	
			url = $(form).attr('action') + '.json';

			$.ajax({
				data: data,
				url: url,
				type: 'POST'
			}).done(function(data) {
				self.setMessage(data);
			});
	},

	setMessage: function(data) {
		if(data.type == 'error') {
			this.showErrors(data.errors);
		} else if (data.type == 'success') {
			this.showMessage(data.message);
		}
	},

	showErrors: function(errors) {
		$.each(errors, function(index, value) {
			console.log(errors);
		});
	},

	showMessage: function(message) {
		console.log(message);
	}
}
$(document).ready(function() {
	MW.i.delegator = new MW.services.Delegator();

	$('body').on('hidden.bs.modal', '.modal', function () {
	    $(this).removeData('bs.modal');
	});
});